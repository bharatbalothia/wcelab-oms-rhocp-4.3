<?xml version="1.0" ?>
<project name="build">
	<property file="project_custom.properties" />
	<property environment="env" />

	<path id="implementation.class.path">
		<fileset dir="${sterling.home}/jar">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${jdk.home}/lib">
			<include name="j2ee.jar" />
		</fileset>
		<!-- <dirset dir="${devhome}/common/mashups" excludes="*"/> -->
	</path>

	<!--Added Classpath components-->
	<path id="project.class.path">
		<path refid="implementation.class.path" />
	</path>

	<pathconvert property="classpathProp" refid="implementation.class.path" />
	<echo>classpath begining ${classpathProp}</echo>
	<!-- Cleans the custom code in INSTALL_DIR -->
	<target name="clean" description="Deletes directories">
		<!-- Delete directories -->
		<delete dir="${sterling.home}/repository/xapi/template/merged/xsl/extn" />
		<delete dir="${sterling.home}/repository/datatypes/extn" />
		<delete dir="${sterling.home}/repository/xapi/template/merged/xsl/extn" />
		<delete dir="${sterling.home}/repository/eardata/isccs/extn/WEB-INF/lib" />
		<delete file="${sterling.home}/repository/eardata/smcfs/extn/web.xml" />
		<delete dir="${devhome}/dist" />
		
		<!-- Re-create directories -->
		<mkdir dir="${sterling.home}/repository/entity/extensions" />
		<mkdir dir="${sterling.home}/resources/extn" />
		<mkdir dir="${sterling.home}/repository/xapi/template/merged/resource/extn" />
		<mkdir dir="${sterling.home}/repository/xapi/template/merged/xsl/extn" />
		<mkdir dir="${sterling.home}/repository/xapi/template/merged/api/extn" />
		<mkdir dir="${sterling.home}/repository/xapi/template/merged/event/extn" />
		<mkdir dir="${sterling.home}/repository/xapi/template/merged/userexit/extn" />
		<mkdir dir="${sterling.home}/repository/xapi/template/merged/prints/label/extn" />
		<mkdir dir="${sterling.home}/repository/eardata/smcfs/extn" />
		<mkdir dir="${sterling.home}/extensions" />
		<mkdir dir="${devhome}" />
		<mkdir dir="${devhome}/dist" />
		<mkdir dir="${devhome}/src" />
		<mkdir dir="${devhome}/Foundation/repository" />
		<mkdir dir="${devhome}/Foundation/resources" />
		<mkdir dir="${devhome}/Foundation/properties" />
	</target>

	<property name="directory" value="${sterling.home}/repository/eardata/isccs/extn/WEB-INF/lib" />
	<target name="ifCheck" depends="dir.check" if="dir.exists">
		<echo>${directory} exists</echo>
	</target>
	<target name="elseCheck" depends="dir.check" unless="dir.exists">
		<echo>${directory} missing"</echo>
		<mkdir dir="${sterling.home}/repository/eardata/isccs/extn/WEB-INF/lib" />
		<mkdir dir="${sterling.home}/repository/eardata/isccsdev/extn/WEB-INF/lib" />
	</target>
	<target name="dir.check">
		<condition property="dir.exists">
			<available file="${directory}" type="dir" />
		</condition>
	</target>

	<target name="build-jars" description="Make Jar" depends="ifCheck,elseCheck">
		<!-- Compile the java source files -->
		<delete dir="${devhome}/dist/Foundation/classes" />
		<mkdir dir="${devhome}/dist/Foundation/classes" />
		<echo>Building the OMS jars.</echo>
		<echo>devhome is ${devhome}</echo>
		<javac classpathref="project.class.path" 
			executable="${jdk.home}/bin/javac" 
			destdir="${devhome}/dist/Foundation/classes" debug="on" 
			debuglevel="lines,vars,source">
			<src path="${devhome}/workspace/custom/jars/yfsextn" />
		</javac>
		<!-- Makes the project jar file - Create version file -->
		<tstamp>
			<format property="NOW" pattern="EEE, MMMM dd yyyy hh:mm aa z" />
		</tstamp>
		<echo file="${devhome}/dist/version.txt">
			Build Version: ${project.name} V ${oms.release.version} Build
			Date: ${NOW}
		</echo>
		<!--yet to update-->

		<!--Copy the version.txt-->
		<copy file="${devhome}/dist/version.txt" todir="${devhome}/dist/Foundation/classes" />
		

		<echo>Creating custom oms jar in Build Dist</echo>
		<jar destfile="${devhome}/dist/Foundation/${project.name}.jar" basedir="${devhome}/dist/Foundation/classes">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<section name="version-information">
					<attribute name="Version" value="${oms.release.version}" />
					<attribute name="BuildDate" value="${NOW}" />
				</section>
			</manifest>
		</jar>
		
	</target>

	<target name="copy-files" description="Deploys the project files in the relevant folders of MCF Installation">
		<echo> 	Copy the project specific properties to properties folder of APP </echo>
		<copy todir="${sterling.home}/properties" overwrite="true">
			<fileset dir="${devhome}/workspace/custom/generic/properties"/>
		</copy>
		<!--Copy extensions-->
		<echo> 	Copy the project specific extensions to extensions folder of APP </echo>
		<copy todir="${sterling.home}/extensions" overwrite="true">
			<fileset dir="${devhome}/workspace/custom/generic/extensions"> </fileset>
		</copy>
		<!--Copy resources
		<echo> Copy the project specific resources to resources folder of APP </echo>
		<copy todir="${sterling.home}/repository/xapi/template/merged/resource/extn" overwrite="true">
			<fileset dir="${devhome}/workspace/custom/generic/resources/extn">
			</fileset>
		</copy>
		<echo> Copy the project specific web.xml to smcfs war etn </echo>
		<copy todir="${sterling.home}/repository/" overwrite="true">
			<fileset dir="${devhome}/workspace/custom/generic/repository/">
			</fileset>
		</copy>
		-->
	</target>


	<target name="install-set-up-files" description="install set up files">
		<echo> Install setup Files </echo>
		    <exec dir="${sterling.home}/bin" executable="/bin/bash">
     			<arg line="setupfiles.sh"/>
    		    </exec>
	</target>

	<target name="install-3rd-Party-oms-custom" description="install 3rd Party oms custom jar">
		<echo>Installing Third Party oms jars --- Start</echo>
		<exec dir="${sterling.home}/bin" executable="./install3rdParty.sh" failonerror="true">
			<arg value="custom" />
			<arg value="1.0" />
			<arg value="-j" />
			<arg value="${devhome}/dist/Foundation/${project.name}.jar" />
			<arg value="-targetJVM" />
			<arg value="EVERY" />
		</exec>
<!--
		<exec dir="${sterling.home}/bin" executable="./install3rdParty.sh" failonerror="true">
			<arg value="WCS" />
			<arg value="9.0" />
			<arg value="-j" />
			<arg value="${devhome}/workspace/custom/thirdparty/WCS/9.0/Foundation-Core.jar" />
			<arg value="-targetJVM" />
			<arg value="EVERY" />
		</exec>
		<exec dir="${sterling.home}/bin" executable="./install3rdParty.sh" failonerror="true">
			<arg value="WCS" />
			<arg value="9.0" />
			<arg value="-j" />
			<arg value="${devhome}/workspace/custom/thirdparty/WCS/9.0/Foundation-Server.jar" />
			<arg value="-targetJVM" />
			<arg value="EVERY" />
		</exec>
-->
		<echo>Installing Third Party oms jars --- End</echo>
	</target>

	<target name="resource-jar">
		<exec executable="${sterling.home}/bin/deployer.sh" failonerror="true">
			<arg value="-t" />
			<arg value="resourcejar" />
		</exec>

	</target>
	<target name="entitydeployer">
		<exec executable="${sterling.home}/bin/deployer.sh" failonerror="true">
			<arg value="-t" />
			<arg value="entitydeployer" />
		</exec>
	</target>


	<target name="build-ear" description="Builds EAR file for deployment">
		<echo>Building EAR</echo>

		<exec executable="${sterling.home}/bin/buildear.sh">
			<arg value="-Dappserver=${appserver.vendor}" />
			<arg value="-Dwarfiles=smcfs,sbc,isccs,isccsdev" />
			<arg value="-Dearfile=smcfs.ear" />
			<arg value="-Dnodocear=true" />
			<arg value="-Dnowebservice=true" />
			<arg value="-Ddevmode=true" />
			<arg value="-Duidevmode=true" />
			<arg value="-Dnoejb=true" />
			<arg value="-Dsupport.multi.war=true" />
			<arg value="-Dwebsphere-java2wsdl-style=document" />
			<arg value="create-ear" />
		</exec>
		<echo>Build smcfs ear completed.</echo>
	</target>

	<target name="copy-ear" description="Copying the .ear file to smcfs from external_deployments folder">
		<!--Copy properties-->
		<echo>
			Copying the .ear file to smcfs from external_deployments folder
		</echo>
		<copy todir="${sterling.home}/smcfs" overwrite="true">
			<fileset dir="${sterling.home}/external_deployments">
				<include name="*.ear" />
				<include name="*.jar" />
			</fileset>
		</copy>

	</target>

	<!-- ===================================================================================================================== -->
	<target name="full.build.ear" depends="apply.customizations-step1, build-ear, copy-ear" description="Executes all the targets">
	</target>
	<target name="apply.customizations-step1" depends="clean, build-jars, copy-files" description="Executes all the targets">
	</target>
	<target name="apply.customizations-step2" depends="install-3rd-Party-oms-custom, resource-jar" description="Executes all the targets">
	</target>

</project>
